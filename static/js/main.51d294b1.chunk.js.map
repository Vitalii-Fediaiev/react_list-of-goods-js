{"version":3,"sources":["App.jsx","index.jsx"],"names":["SORT_FIELD_ALPHABET","SORT_FIELD_LENGHT","goodsFromServer","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleGoods","goods","prepearedGoods","sort","item1","item2","localeCompare","length","reverse","getPreperedGoods","className","type","cn","onClick","prev","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMMA,EAAsB,iBACtBC,EAAoB,SAuBnB,IAAMC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EArCR,SAA0BC,EAAOL,EAAWE,GAC1C,IAAMI,EAAc,YAAOD,GAe3B,OAbAC,EAAeC,MAAK,SAACC,EAAOC,GAC1B,OAAQT,GACN,KAAKL,EACH,OAAOa,EAAME,cAAcD,GAE7B,KAAKb,EACH,OAAOY,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAINT,EACHI,EAAeM,UACfN,EAmBiBO,CACnBhB,EACAG,EACAE,GAOF,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYhB,IAAcL,IAE9BsB,QAAS,kBAAMhB,EAAaN,IAN9B,iCAWA,wBACEoB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYhB,IAAcJ,IAE9BqB,QAAS,kBAAMhB,EAAaL,IAN9B,4BAWA,wBACEmB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAad,IAEjBe,QAnCmB,WACzBd,GAAc,SAAAe,GAAI,OAAKA,MA4BnB,sBAWgB,KAAdlB,GAAoBE,IACpB,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPhB,EAAa,IACbE,GAAc,IALlB,sBAaJ,6BACGC,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCzGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.51d294b1.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nconst SORT_FIELD_ALPHABET = 'alphabetically';\nconst SORT_FIELD_LENGHT = 'length';\n\nfunction getPreperedGoods(goods, sortField, isReversed) {\n  const prepearedGoods = [...goods];\n\n  prepearedGoods.sort((item1, item2) => {\n    switch (sortField) {\n      case SORT_FIELD_ALPHABET:\n        return item1.localeCompare(item2);\n\n      case SORT_FIELD_LENGHT:\n        return item1.length - item2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  return isReversed\n    ? prepearedGoods.reverse()\n    : prepearedGoods;\n}\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = getPreperedGoods(\n    goodsFromServer,\n    sortField,\n    isReversed,\n  );\n\n  const handleReverseClick = () => {\n    setIsReversed(prev => !prev);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            { 'is-light': sortField !== SORT_FIELD_ALPHABET },\n          )}\n          onClick={() => setSortField(SORT_FIELD_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            { 'is-light': sortField !== SORT_FIELD_LENGHT },\n          )}\n          onClick={() => setSortField(SORT_FIELD_LENGHT)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={handleReverseClick}\n        >\n          Reverse\n        </button>\n\n        {(sortField !== '' || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField('');\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}